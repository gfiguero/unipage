<?php

namespace Proxies\__CG__\Uni\AdminBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Frontpage extends \Uni\AdminBundle\Entity\Frontpage implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'id', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'title', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'subtitle', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'email', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'phonenumber', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'address', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'mission', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'vision', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'active', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'createdAt', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'updatedAt', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'deletedAt', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'photos');
        }

        return array('__isInitialized__', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'id', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'title', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'subtitle', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'email', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'phonenumber', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'address', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'mission', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'vision', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'active', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'createdAt', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'updatedAt', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'deletedAt', '' . "\0" . 'Uni\\AdminBundle\\Entity\\Frontpage' . "\0" . 'photos');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Frontpage $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubtitle($subtitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubtitle', array($subtitle));

        return parent::setSubtitle($subtitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubtitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubtitle', array());

        return parent::getSubtitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhonenumber($phonenumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhonenumber', array($phonenumber));

        return parent::setPhonenumber($phonenumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhonenumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhonenumber', array());

        return parent::getPhonenumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress($address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', array($address));

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', array());

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setMission($mission)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMission', array($mission));

        return parent::setMission($mission);
    }

    /**
     * {@inheritDoc}
     */
    public function getMission()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMission', array());

        return parent::getMission();
    }

    /**
     * {@inheritDoc}
     */
    public function setVision($vision)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVision', array($vision));

        return parent::setVision($vision);
    }

    /**
     * {@inheritDoc}
     */
    public function getVision()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVision', array());

        return parent::getVision();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', array($active));

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', array());

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', array($updatedAt));

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', array());

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeletedAt($deletedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeletedAt', array($deletedAt));

        return parent::setDeletedAt($deletedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeletedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeletedAt', array());

        return parent::getDeletedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function addPhoto(\Uni\AdminBundle\Entity\FrontpagePhoto $photos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPhoto', array($photos));

        return parent::addPhoto($photos);
    }

    /**
     * {@inheritDoc}
     */
    public function removePhoto(\Uni\AdminBundle\Entity\FrontpagePhoto $photos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePhoto', array($photos));

        return parent::removePhoto($photos);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhotos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhotos', array());

        return parent::getPhotos();
    }

}
